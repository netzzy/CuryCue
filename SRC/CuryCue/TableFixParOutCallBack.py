# me - this DAT
# scriptOp - the OP which is cooking
#
# press 'Setup Parameters' in the OP to call this function to re-create the parameters.

# called whenever custom pulse parameter is pushed
def onPulse(par):
	return

def onCook(scriptOp):
	if hasattr(parent.curycue.ext, "CuryCueClass"): 
		scriptOp.clear()
		a=dict()
		
		if int(scriptOp.par.Deviceid) in parent.curycue.LocalFixturesByID:
			
			myDevice=parent.curycue.LocalFixturesByID[int(scriptOp.par.Deviceid)]
			myPars=myDevice.pars
			for myPar in myPars:
				myValue=0
				if isinstance(myPar.default_value, str):
					myValue=myPar.default_value
				else:
					myValue="%g" % myPar.default_value
				scriptOp.appendRow([myPar.id,myDevice.id, myPar.par_name, myValue,"%g" % myPar.fade_default, "%g" % myPar.delay_default, "%g" % myPar.is_enabled])
	#for fix in parent.curycue.LocalFixtureData:
	#	scriptOp.appendRow([fix.name, fix.global_object_location])

	#scriptOp.copy(scriptOp.inputs[0])	# no need to call .clear() above when copying
	#scriptOp.insertRow(['color', 'size', 'shape'], 0)
	#scriptOp.appendRow(['red', '3', 'square'])
	#scriptOp[1,0] += '**'

	return

def onSetupParameters(scriptOp):
	"""Auto-generated by Component Editor"""
	# manual changes to anything other than parJSON will be	# destroyed by Comp Editor unless doc string above is	# changed

	TDJSON = op.TDModules.mod.TDJSON
	parJSON = """
	{
		"Settings": {
			"Deviceid": {
				"name": "Deviceid",
				"label": "Device id",
				"page": "Settings",
				"style": "Int",
				"size": 1,
				"default": 0,
				"enable": true,
				"startSection": false,
				"readOnly": false,
				"enableExpr": null,
				"min": 0.0,
				"max": 1.0,
				"normMin": 0.0,
				"normMax": 1.0,
				"clampMin": false,
				"clampMax": false
			}
		}
	}
	"""
	parData = TDJSON.textToJSON(parJSON)
	TDJSON.addParametersFromJSONOp(scriptOp, parData, destroyOthers=True)